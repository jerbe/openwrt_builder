#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
#=================================================

name: "[ImmortalWRT]-常用路由器固件"

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  buile_openwrt:
    runs-on: Ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    name: 构建 ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [xiaomi_redmi-router-ax6s, xiaomi_mi-router-3-pro]
    
    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        ( sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync zip
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* hhvm llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean ) &
        sudo timedatectl set-timezone "$TZ"
        
    - name: 设置版本
      id: set_version
      run: |
        echo "VERSION=$(date +'%Y%m.%d')" >> $GITHUB_ENV

    - name: 克隆源代码
      env: 
        REPO_URL: https://github.com/immortalwrt/immortalwrt
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
        sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
        sed -i '$a src-git smpackage https://github.com/kenzok8/small-package' feeds.conf.default

    - name: 更新 & 安装 feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 自定义配置 ${{matrix.target}}
      env:
        CONFIG_FILE: '${{matrix.target}}.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cp ./diy/${{ matrix.target }}/immortalwrt.sh ./diy.sh
        chmod +x ./diy.sh && ./diy.sh
        cp -f ./devices/${{matrix.target}}/immortalwrt.config openwrt/.config
        cd openwrt
        make defconfig
        
    - name: 下载包文件
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      working-directory: ./openwrt
      run: |
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1))  || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
     
    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      id: organize
      if: steps.compile.outputs.status == 'success'
      run: |
        mkdir firmware
        mv -f openwrt/bin/targets/*/*/* ./firmware/ 2>/dev/null || true
        cp openwrt/.config  ./firmware/${{matrix.target}}.config
        cp openwrt/build_dir/target-*/linux-*/linux-*/.config ./firmware/${{matrix.target}}_kernel.config
        cd firmware
        find ./ -regextype egrep  -regex ".*(?<!config)$" -printf '%f\n'|xargs -I {} md5sum {} >> md5.txt
        echo -e "repository version: `git rev-parse HEAD`\n" >> ${{matrix.target}}-info.txt
        echo -e '\n\n>>>>> MD5' >> ${{matrix.target}}-info.txt
        cat md5.txt >> ${{matrix.target}}-info.txt
        echo -e '<<<<< MD5\n\n' >> ${{matrix.target}}-info.txt
        rm md5.txt
        zip -r ${{matrix.target}}.zip ./*
        
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 发布已编译固件
      uses: ncipollo/release-action@main
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      with:
        tag: ${{ env.VERSION }}_router_immortalwrt
        name: "[${{ env.VERSION }}] [ImmortalWRT] Router Firmwares"
        artifacts: ${{env.FIRMWARE}}/${{matrix.target}}.zip
        allowUpdates: true
        body: |
          * Firmware information
          * 固件信息

          Default IP: 192.168.31.1
          默认IP: 192.168.31.1

          Default username: root
          默认账户: root

          Default password: password
          默认密码: password

          Default WIFI name:  D-WiFi
          默认WiFi名称: D-WiFi

          Default WIFI password: none
          默认WiFi密码: 无